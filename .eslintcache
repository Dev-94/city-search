[{"/Users/Deven/Desktop/Desktop_Folder/React/city-search/src/reportWebVitals.js":"1","/Users/Deven/Desktop/Desktop_Folder/React/city-search/src/App.js":"2","/Users/Deven/Desktop/Desktop_Folder/React/city-search/src/index.js":"3"},{"size":362,"mtime":1606161946062,"results":"4","hashOfConfig":"5"},{"size":2565,"mtime":1606330246682,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1606161946061,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5wjy7e",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Deven/Desktop/Desktop_Folder/React/city-search/src/reportWebVitals.js",[],"/Users/Deven/Desktop/Desktop_Folder/React/city-search/src/App.js",["15","16"],"import React, { useEffect, useState } from \"react\";\nimport './App.css';\n\n// funzies!!!: set up pagination\n// Todo: add styling, sticky search at bottom, highlight similar characters\n// add logo to tab\n// add title to page\n\nfunction App() {\n\n  let [query, querySet] = useState('')\n  let [response, responseSet] = useState([])\n  let [results, resultsSet] = useState([])\n\n\n  const fetchData = (event) => {\n    event.preventDefault();\n    const url = 'https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json'\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        responseSet(json)\n      });\n  }\n\n  useEffect(() => {\n    results = []\n    response.filter((data) => {\n      if (query == null) {\n        results.push(data)\n        resultsSet(results)\n      }\n      else if (data.city.toLowerCase().includes(query.toLowerCase()) || data.growth_from_2000_to_2013.toLowerCase().includes(query.toLowerCase()) || data.latitude.toString().includes(query) || data.longitude.toString().includes(query.toLowerCase()) || data.population.toLowerCase().includes(query.toLowerCase()) || data.rank.toLowerCase().includes(query.toLowerCase()) || data.state.toLowerCase().includes(query.toLowerCase())) {\n        results.push(data)\n        resultsSet(results)\n      }\n    }\n    )\n  },\n    [response]\n  )\n\n  const handleInputChange = (e) => {\n    querySet(e.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n\n      <h1>City Search</h1>\n      <form className=\"searchBar\" onSubmit={fetchData}>\n        <label>\n          <input\n            className=\"search\"\n            type=\"text\"\n            value={query}\n            onChange={handleInputChange}\n          />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n\n      <hr />\n\n      <h4>search results for \"{query}\"</h4>\n\n      <br />\n\n      {results.length === 0 ?\n        <p>no results</p>\n        :\n        <div>\n          <ul >\n            {results.map((item, i) => (\n              <div className=\"card\" key={i}>\n                <h3> {item.city}, {item.state}</h3>\n                <p> <strong>Growth:</strong> {item.growth_from_2000_to_2013}</p>\n                <p> <strong>Coordinates:</strong> ({item.latitude}, {item.longitude})</p>\n                <p> <strong>Population:</strong> {item.population}</p>\n                <p> <strong>Rank:</strong> {item.rank}</p>\n                <br />\n              </div>\n            ))}\n\n          </ul>\n        </div>\n\n      }\n    </div>\n  );\n}\n\nexport default App;\n","/Users/Deven/Desktop/Desktop_Folder/React/city-search/src/index.js",[],{"ruleId":"17","severity":1,"message":"18","line":27,"column":15,"nodeType":"19","endLine":27,"endColumn":17},{"ruleId":"20","severity":1,"message":"21","line":28,"column":28,"nodeType":"22","messageId":"23","endLine":28,"endColumn":30},"react-hooks/exhaustive-deps","Assignments to the 'results' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ArrayExpression","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]